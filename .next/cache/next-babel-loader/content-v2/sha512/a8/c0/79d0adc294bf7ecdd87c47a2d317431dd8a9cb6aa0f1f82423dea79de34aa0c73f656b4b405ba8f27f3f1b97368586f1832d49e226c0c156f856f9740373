{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/newTest.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Button, Input, Message, Segment, Header, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createTestingNode().send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Segment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h3\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"user secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), \"Create Testing Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          error: !!this.state.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(Message, {\n            error: true,\n            header: \"Oops!\",\n            content: this.state.errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            loading: this.state.loading,\n            primary: true,\n            children: \"Tester!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/newTest.js"],"names":["React","Component","Form","Button","Input","Message","Segment","Header","Icon","Layout","factory","web3","Router","CampaignNew","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createTestingNode","send","from","pushRoute","err","message","render","onSubmit","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAsCC,OAAtC,EAA8CC,MAA9C,EAAqDC,IAArD,QAAiE,mBAAjE;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNa,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,OAAO,EAAE;AAFH,KAD0B;;AAAA,sCAMvB,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACF,cAAMK,QAAQ,GAAG,MAAMR,IAAI,CAACS,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMX,OAAO,CAACY,OAAR,CACHC,iBADG,GAEHC,IAFG,CAEE;AACJC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD;AADV,SAFF,CAAN;AAMAP,QAAAA,MAAM,CAACc,SAAP,CAAiB,GAAjB;AACD,OATD,CASE,OAAOC,GAAP,EAAY;AACZ,aAAKT,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEa,GAAG,CAACC;AAApB,SAAd;AACD;;AAED,WAAKV,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAzBiC;AAAA;;AA2BlCc,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BAEE,QAAC,OAAD;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAMA,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,UAAA,KAAK,EAAE,CAAC,CAAC,KAAKC,KAAL,CAAWjB,YAAnD;AAAA,kCAEE,QAAC,OAAD;AAAS,YAAA,KAAK,MAAd;AAAe,YAAA,MAAM,EAAC,OAAtB;AAA8B,YAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWjB;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB,OAA5B;AAAqC,YAAA,OAAO,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA/CiC;;AAkDpC,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button, Input, Message,Segment,Header,Icon } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\n\nclass CampaignNew extends Component {\n  state = {\n    errorMessage: '',\n    loading: false\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods\n        .createTestingNode()\n        .send({\n          from: accounts[0]\n        });\n\n      Router.pushRoute('/');\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Layout>\n\n        <Segment>\n        <Header as='h3'>\n            <Icon name='user secret' />\n            Create Testing Node\n        </Header>\n\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\n          <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          <Button loading={this.state.loading} primary>\n            Tester!\n          </Button>\n        </Form>\n       </Segment>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignNew;\n"]},"metadata":{},"sourceType":"module"}