{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/indexTest.js\";\nimport React, { Component } from 'react';\nimport { Card, Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\n\nclass CampaignIndex extends Component {\n  static async getInitialProps() {\n    //const campaigns = await factory.methods.getDeployedMalwares().call();\n    const testingNodes = await factory.methods.getDeployedNodes().call();\n    return {\n      testingNodes\n    };\n  }\n\n  renderTestingNodes() {\n    const items = this.props.testingNodes.map(address => {\n      return {\n        header: address,\n        description: /*#__PURE__*/_jsxDEV(Link, {\n          route: `/campaigns/test/${address}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"View Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Segment.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(Header, {\n              as: \"h3\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this), \"Testing Nodes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              route: \"/campaigns/newTest\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  floated: \"right\",\n                  content: \"Add Testing Node\",\n                  icon: \"add circle\",\n                  primary: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }, this), this.renderTestingNodes()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/indexTest.js"],"names":["React","Component","Card","Button","Header","Icon","Segment","factory","Layout","Link","CampaignIndex","getInitialProps","testingNodes","methods","getDeployedNodes","call","renderTestingNodes","items","props","map","address","header","description","fluid","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA8BC,IAA9B,EAAmCC,OAAnC,QAAiD,mBAAjD;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;;AAEA,MAAMC,aAAN,SAA4BT,SAA5B,CAAsC;AACpC,eAAaU,eAAb,GAA+B;AAC7B;AACA,UAAMC,YAAY,GAAG,MAAML,OAAO,CAACM,OAAR,CAAgBC,gBAAhB,GAAmCC,IAAnC,EAA3B;AAEA,WAAO;AACFH,MAAAA;AADE,KAAP;AAGD;;AAEDI,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWN,YAAX,CAAwBO,GAAxB,CAA4BC,OAAO,IAAI;AACnD,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,eACT,QAAC,IAAD;AAAM,UAAA,KAAK,EAAG,mBAAkBF,OAAQ,EAAxC;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHG;AAOLG,QAAAA,KAAK,EAAE;AAPF,OAAP;AASD,KAVa,CAAd;AAYA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE;AAAA,+BAGE,QAAC,OAAD,CAAS,KAAT;AAAA,kCAEA,QAAC,OAAD;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,IAAX;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAFA,eASM,QAAC,OAAD;AAAA,oCAEN,QAAC,IAAD;AAAM,cAAA,KAAK,EAAC,oBAAZ;AAAA,qCACE;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,OADV;AAEE,kBAAA,OAAO,EAAC,kBAFV;AAGE,kBAAA,IAAI,EAAC,YAHP;AAIE,kBAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFM,EAaL,KAAKR,kBAAL,EAbK;AAAA;AAAA;AAAA;AAAA;AAAA,kBATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AA7DmC;;AAgEtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button, Header,Icon,Segment} from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport Layout from '../../components/Layout';\nimport { Link } from '../../routes';\n\nclass CampaignIndex extends Component {\n  static async getInitialProps() {\n    //const campaigns = await factory.methods.getDeployedMalwares().call();\n    const testingNodes = await factory.methods.getDeployedNodes().call();\n\n    return {\n         testingNodes\n     };\n  }\n\n  renderTestingNodes() {\n    const items = this.props.testingNodes.map(address => {\n      return {\n        header: address,\n        description: (\n          <Link route={`/campaigns/test/${address}`}>\n            <a>View Node</a>\n          </Link>\n        ),\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n\n\n          <Segment.Group>\n\n          <Segment>\n          <Header as='h3'>\n              <Icon name='users' />\n             Testing Nodes\n          </Header>\n          </Segment>\n\n                <Segment>\n\n          <Link route=\"/campaigns/newTest\">\n            <a>\n              <Button\n                floated=\"right\"\n                content=\"Add Testing Node\"\n                icon=\"add circle\"\n                primary\n              />\n            </a>\n          </Link>\n\n          {this.renderTestingNodes()}\n\n          </Segment>\n        </Segment.Group>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignIndex;\n"]},"metadata":{},"sourceType":"module"}