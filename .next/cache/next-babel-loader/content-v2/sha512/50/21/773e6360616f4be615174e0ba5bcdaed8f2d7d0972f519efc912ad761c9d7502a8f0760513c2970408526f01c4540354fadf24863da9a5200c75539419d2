{"ast":null,"code":"import _regeneratorRuntime from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/show.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Grid, Button, Segment, Header, Icon } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3';\nimport ConsentForm from '../../components/ConsentForm';\nimport ByteForm from '../../components/ByteForm';\nimport GetFileFormMalware from '../../components/GetFileFormMalware';\nimport { Link } from '../../routes';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          address = _this$props.address,\n          prob = _this$props.prob,\n          deployedUser = _this$props.deployedUser,\n          MalwareHash = _this$props.MalwareHash,\n          amount = _this$props.amount,\n          perCentMalware = _this$props.perCentMalware;\n      var items = [{\n        header: deployedUser,\n        meta: 'Address of User',\n        description: 'The user uploaded this malware.',\n        style: {\n          overflowWrap: 'break-word'\n        },\n        color: 'blue'\n      }, {\n        header: amount,\n        meta: 'Amount(wei)',\n        description: 'This amount offered by user for getting files checked.',\n        color: 'blue'\n      }, {\n        header: address,\n        meta: 'Address of Malware',\n        description: 'Address of current malware contract',\n        style: {\n          overflowWrap: 'break-word'\n        },\n        color: 'blue'\n      }, {\n        header: perCentMalware,\n        meta: 'Percent of malware',\n        description: 'Percent of malware detected after nodes report',\n        color: 'blue'\n      }, {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description: 'The sha256 hash for this malware',\n        style: {\n          overflowWrap: 'break-word'\n        },\n        color: 'blue'\n      }, {\n        header: prob,\n        meta: 'Probabilty Malware',\n        description: '',\n        style: {\n          overflowWrap: 'break-word'\n        },\n        color: 'blue'\n      }];\n      return /*#__PURE__*/_jsxDEV(Card.Group, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Segment.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(Header, {\n              as: \"h3\",\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"bug\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this), \"Details\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 10,\n                  children: this.renderCards()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  width: 6,\n                  children: [/*#__PURE__*/_jsxDEV(ConsentForm, {\n                    address: this.props.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 26\n                  }, this), /*#__PURE__*/_jsxDEV(GetFileFormMalware, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  addedAddress: summary[0],\n                  prob: summary[1],\n                  deployedUser: summary[2],\n                  MalwareHash: summary[3],\n                  amount: summary[4],\n                  perCentMalware: summary[5]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Segment","Header","Icon","Layout","Campaign","web3","ConsentForm","ByteForm","GetFileFormMalware","Link","CampaignShow","props","address","prob","deployedUser","MalwareHash","amount","perCentMalware","items","header","meta","description","style","overflowWrap","color","renderCards","campaign","query","methods","getSummary","call","summary","addedAddress"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Grid, Button ,Segment,Header,Icon} from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3';\nimport ConsentForm from '../../components/ConsentForm';\nimport ByteForm from '../../components/ByteForm';\nimport GetFileFormMalware from '../../components/GetFileFormMalware';\n\n\n\n\nimport { Link } from '../../routes';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n\n    const summary = await campaign.methods.getSummary().call();\n\n\n    return {\n      address: props.query.address,\n      addedAddress: summary[0],\n      prob: summary[1],\n      deployedUser: summary[2],\n      MalwareHash: summary[3],\n      amount: summary[4],\n      perCentMalware: summary[5],\n\n\n    };\n  }\n\n  renderCards() {\n    const {\n      address,\n      prob,\n      deployedUser,\n      MalwareHash,\n      amount,\n      perCentMalware,\n\n\n    } = this.props;\n\n    const items = [\n      {\n        header: deployedUser,\n        meta: 'Address of User',\n        description:\n          'The user uploaded this malware.',\n        style: { overflowWrap: 'break-word' },\n        color : 'blue',\n\n      },\n      {\n        header: amount,\n        meta: 'Amount(wei)',\n        description:\n          'This amount offered by user for getting files checked.',\n        color : 'blue'\n      },\n      {\n        header: address,\n        meta: 'Address of Malware',\n        description:\n          'Address of current malware contract',\n        style: { overflowWrap: 'break-word' },\n        color : 'blue'\n      },\n      {\n        header: perCentMalware,\n        meta: 'Percent of malware',\n        description:\n          'Percent of malware detected after nodes report',\n        color : 'blue'\n      },\n      {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description:\n          'The sha256 hash for this malware',\n        style: { overflowWrap: 'break-word' },\n        color : 'blue'\n    },\n    {\n      header: prob,\n      meta: 'Probabilty Malware',\n      description:\n        '',\n      style: { overflowWrap: 'break-word' },\n      color : 'blue'\n    }\n\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n\n        <Segment.Group>\n\n        <Segment>\n        <Header as='h3'>\n            <Icon name='bug' />\n           Details\n        </Header>\n        </Segment>\n\n              <Segment>\n\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n\n            <Grid.Column width={6}>\n                <ConsentForm address={this.props.address} />\n                    <br/><br/>\n                <GetFileFormMalware/>\n            </Grid.Column>\n\n          </Grid.Row>\n\n        </Grid>\n        </Segment>\n        </Segment.Group>\n\n\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}