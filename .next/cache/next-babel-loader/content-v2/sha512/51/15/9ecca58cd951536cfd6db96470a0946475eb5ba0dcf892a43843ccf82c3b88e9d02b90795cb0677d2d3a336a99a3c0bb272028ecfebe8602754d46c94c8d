{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/components/GetFileFormMalware.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button, Card, Grid } from 'semantic-ui-react'; //import Campaign from '../ethereum/testingNode';\n\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport Link from 'next/link';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      malwareAddress: '',\n      errorMessage: '',\n      loading: false,\n      perCent: '',\n      urlObj: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //const percent = await campaign.methods.getUrl(this.state.malwareAddress).call();\n\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"hash\": this.state.malwareAddress\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:3000/api/GetDownloadUrl\", requestOptions).then(response => response.text()).then(result => this.setState({\n        urlObj: result\n      })).catch(error => console.log('error', error));\n\n      try {// Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: ''\n      });\n    });\n  }\n\n  renderCards() {\n    const items = [{\n      header: this.state.urlObj,\n      meta: 'Malware Url',\n      description: '',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Malware Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: this.state.malwareAddress,\n          onChange: event => this.setState({\n            malwareAddress: event.target.value\n          }),\n          label: \"hash\",\n          labelPosition: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          loading: this.state.loading,\n          children: \"Get Download Url!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 10,\n              children: this.renderCards()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-july-13/components/GetFileFormMalware.js"],"names":["React","Component","Form","Input","Message","Button","Card","Grid","web3","Router","Link","ContributeForm","malwareAddress","errorMessage","loading","perCent","urlObj","event","preventDefault","setState","myHeaders","Headers","append","raw","JSON","stringify","state","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","catch","error","console","log","err","message","value","renderCards","items","header","meta","description","style","overflowWrap","render","onSubmit","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button ,Card, Grid} from 'semantic-ui-react';\n//import Campaign from '../ethereum/testingNode';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport Link from 'next/link';\n\nclass ContributeForm extends Component {\n  state = {\n    malwareAddress: '',\n    errorMessage: '',\n    loading: false,\n    perCent: '',\n    urlObj:''\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n\n    //const percent = await campaign.methods.getUrl(this.state.malwareAddress).call();\n\n    this.setState({ loading: true, errorMessage: '' });\n\n\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\"hash\":this.state.malwareAddress});\n\n    var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    fetch(\"http://localhost:3000/api/GetDownloadUrl\", requestOptions)\n    .then(response => response.text())\n    .then(result => this.setState({urlObj : result}))\n    .catch(error => console.log('error', error));\n\n\n\n\n\n    try {\n\n\n     // Router.replaceRoute(`/campaigns/${this.props.address}`);\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false, value: ''});\n  };\n\n  renderCards() {\n\n    const items = [\n      {\n        header: this.state.urlObj,\n        meta: 'Malware Url',\n        description:\n          '',\n        style: { overflowWrap: 'break-word' }\n    }\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        <Form.Field>\n          <label>Malware Hash</label>\n          <Input\n            value={this.state.malwareAddress}\n            onChange={event => this.setState({ malwareAddress: event.target.value })}\n            label=\"hash\"\n            labelPosition=\"right\"\n          />\n\n          <br/>\n          <br/>\n\n          <Button primary loading={this.state.loading}>\n            Get Download Url!\n          </Button>\n\n          <br/>\n          <br/>\n\n          <Grid>\n            <Grid.Row>\n              <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n            </Grid.Row>\n          </Grid>\n\n\n\n        </Form.Field>\n\n        <Message error header=\"Oops!\" content={this.state.errorMessage} />\n\n      </Form>\n\n\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}